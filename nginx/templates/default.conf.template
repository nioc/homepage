server {
    listen          ${NGINX_PORT};
    server_name     ${NGINX_HOST};

    gzip            ${NGINX_GZIP};
    gzip_types      application/javascript text/css;

    server_tokens off;

    include /etc/nginx/conf.d/extra/global-*.conf;

    location = /conf/app.yml {
        types { } default_type "application/yaml";
        include /etc/nginx/conf.d/headers-security.conf;
        include /etc/nginx/conf.d/extra/yaml-*.conf;
        add_header Content-Security-Policy "default-src 'none'";
        root   /usr/share/nginx/html;
        sub_filter 'groupsAdditionalFiles:' 'groupsAdditionalFiles: $http_${NGINX_SSO_GROUPS_HEADER_NAME}';
        sub_filter 'userAdditionalFile:' 'userAdditionalFile: $http_${NGINX_SSO_USER_HEADER_NAME}';
        sub_filter_types application/yaml;
    }

    location ~* ^/conf/(.+).yml$ {
        include /etc/nginx/conf.d/headers-security.conf;
        include /etc/nginx/conf.d/extra/yaml-*.conf;
        add_header Content-Security-Policy "default-src 'none'";
        types { } default_type "application/yaml";
        add_header Cache-Control no-cache;
        root   /usr/share/nginx/html;
    }

    location ~* ^/files/.*$ {
        include /etc/nginx/conf.d/headers-security.conf;
        include /etc/nginx/conf.d/extra/static-*.conf;
        add_header Content-Security-Policy "default-src 'none'";
        root   /usr/share/nginx/html;
        try_files $uri $uri/;
    }

    location / {
        include /etc/nginx/conf.d/headers-security.conf;
        include /etc/nginx/conf.d/extra/static-*.conf;
        add_header Content-Security-Policy "default-src 'self'; img-src 'self' data: http: https:; script-src 'self' 'unsafe-eval'; style-src 'self' 'unsafe-inline'";
        root   /usr/share/nginx/html/app;
        try_files $uri /index.html;
    }

    location /proxy/ {
        resolver ${NGINX_RESOLVER};
        resolver_timeout 5s;
        proxy_set_header Referer "";
        proxy_pass $arg_url;
        proxy_intercept_errors on;
        # remove homepage header
        proxy_set_header x-homepage-url "";
        # remove forward proxy headers
        proxy_set_header x-forwarded-for "";
        proxy_set_header x-forwarded-method "";
        proxy_set_header x-forwarded-proto "";
        proxy_set_header x-forwarded-host "";
        proxy_set_header x-forwarded-uri "";
        # remove SSO provider-specific headers
        include /etc/nginx/conf.d/homepage/sso-${NGINX_SSO_PROVIDER}.conf;
        # user-defined rules
        include /etc/nginx/conf.d/extra/proxy-*.conf;
        error_page 301 302 307 308 = @handle_redirect;
    }

    location /uploads {
        alias /usr/share/nginx/html/files;
        include /etc/nginx/conf.d/dav.conf;
        limit_except PUT { deny all; }
        include /etc/nginx/conf.d/extra/dav-*.conf;
    }

    location /admin/conf {
        alias /usr/share/nginx/html/conf;
        include /etc/nginx/conf.d/dav.conf;
        limit_except PUT { deny all; }
        include /etc/nginx/conf.d/extra/dav-*.conf;
    }

    location @handle_redirect {
        return 302 $http_x_homepage_url/proxy/?url=$upstream_http_location;
    }
}
